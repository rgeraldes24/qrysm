// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.3
// source: proto/zond/v1/beacon_block.proto

package v1

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/golang/protobuf/protoc-gen-go/descriptor"
	github_com_theQRL_go_bitfield "github.com/theQRL/go-bitfield"
	github_com_theQRL_qrysm_v4_consensus_types_primitives "github.com/theQRL/qrysm/v4/consensus-types/primitives"
	v1 "github.com/theQRL/qrysm/v4/proto/engine/v1"
	_ "github.com/theQRL/qrysm/v4/proto/zond/ext"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BeaconBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot          github_com_theQRL_qrysm_v4_consensus_types_primitives.Slot           `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty" cast-type:"github.com/theQRL/qrysm/v4/consensus-types/primitives.Slot"`
	ProposerIndex github_com_theQRL_qrysm_v4_consensus_types_primitives.ValidatorIndex `protobuf:"varint,2,opt,name=proposer_index,json=proposerIndex,proto3" json:"proposer_index,omitempty" cast-type:"github.com/theQRL/qrysm/v4/consensus-types/primitives.ValidatorIndex"`
	ParentRoot    []byte                                                               `protobuf:"bytes,3,opt,name=parent_root,json=parentRoot,proto3" json:"parent_root,omitempty" ssz-size:"32"`
	StateRoot     []byte                                                               `protobuf:"bytes,4,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty" ssz-size:"32"`
	Body          *BeaconBlockBody                                                     `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *BeaconBlock) Reset() {
	*x = BeaconBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconBlock) ProtoMessage() {}

func (x *BeaconBlock) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconBlock.ProtoReflect.Descriptor instead.
func (*BeaconBlock) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{0}
}

func (x *BeaconBlock) GetSlot() github_com_theQRL_qrysm_v4_consensus_types_primitives.Slot {
	if x != nil {
		return x.Slot
	}
	return github_com_theQRL_qrysm_v4_consensus_types_primitives.Slot(0)
}

func (x *BeaconBlock) GetProposerIndex() github_com_theQRL_qrysm_v4_consensus_types_primitives.ValidatorIndex {
	if x != nil {
		return x.ProposerIndex
	}
	return github_com_theQRL_qrysm_v4_consensus_types_primitives.ValidatorIndex(0)
}

func (x *BeaconBlock) GetParentRoot() []byte {
	if x != nil {
		return x.ParentRoot
	}
	return nil
}

func (x *BeaconBlock) GetStateRoot() []byte {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *BeaconBlock) GetBody() *BeaconBlockBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type BlindedBeaconBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot          github_com_theQRL_qrysm_v4_consensus_types_primitives.Slot           `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty" cast-type:"github.com/theQRL/qrysm/v4/consensus-types/primitives.Slot"`
	ProposerIndex github_com_theQRL_qrysm_v4_consensus_types_primitives.ValidatorIndex `protobuf:"varint,2,opt,name=proposer_index,json=proposerIndex,proto3" json:"proposer_index,omitempty" cast-type:"github.com/theQRL/qrysm/v4/consensus-types/primitives.ValidatorIndex"`
	ParentRoot    []byte                                                               `protobuf:"bytes,3,opt,name=parent_root,json=parentRoot,proto3" json:"parent_root,omitempty" ssz-size:"32"`
	StateRoot     []byte                                                               `protobuf:"bytes,4,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty" ssz-size:"32"`
	Body          *BlindedBeaconBlockBody                                              `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *BlindedBeaconBlock) Reset() {
	*x = BlindedBeaconBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlindedBeaconBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlindedBeaconBlock) ProtoMessage() {}

func (x *BlindedBeaconBlock) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlindedBeaconBlock.ProtoReflect.Descriptor instead.
func (*BlindedBeaconBlock) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{1}
}

func (x *BlindedBeaconBlock) GetSlot() github_com_theQRL_qrysm_v4_consensus_types_primitives.Slot {
	if x != nil {
		return x.Slot
	}
	return github_com_theQRL_qrysm_v4_consensus_types_primitives.Slot(0)
}

func (x *BlindedBeaconBlock) GetProposerIndex() github_com_theQRL_qrysm_v4_consensus_types_primitives.ValidatorIndex {
	if x != nil {
		return x.ProposerIndex
	}
	return github_com_theQRL_qrysm_v4_consensus_types_primitives.ValidatorIndex(0)
}

func (x *BlindedBeaconBlock) GetParentRoot() []byte {
	if x != nil {
		return x.ParentRoot
	}
	return nil
}

func (x *BlindedBeaconBlock) GetStateRoot() []byte {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *BlindedBeaconBlock) GetBody() *BlindedBeaconBlockBody {
	if x != nil {
		return x.Body
	}
	return nil
}

type BeaconBlockContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Block:
	//
	//	*BeaconBlockContainer_CapellaBlock
	Block isBeaconBlockContainer_Block `protobuf_oneof:"block"`
}

func (x *BeaconBlockContainer) Reset() {
	*x = BeaconBlockContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconBlockContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconBlockContainer) ProtoMessage() {}

func (x *BeaconBlockContainer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconBlockContainer.ProtoReflect.Descriptor instead.
func (*BeaconBlockContainer) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{2}
}

func (m *BeaconBlockContainer) GetBlock() isBeaconBlockContainer_Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (x *BeaconBlockContainer) GetCapellaBlock() *BeaconBlock {
	if x, ok := x.GetBlock().(*BeaconBlockContainer_CapellaBlock); ok {
		return x.CapellaBlock
	}
	return nil
}

type isBeaconBlockContainer_Block interface {
	isBeaconBlockContainer_Block()
}

type BeaconBlockContainer_CapellaBlock struct {
	CapellaBlock *BeaconBlock `protobuf:"bytes,1,opt,name=capella_block,json=capellaBlock,proto3,oneof"`
}

func (*BeaconBlockContainer_CapellaBlock) isBeaconBlockContainer_Block() {}

type SignedBeaconBlockContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*SignedBeaconBlockContainer_CapellaBlock
	Message   isSignedBeaconBlockContainer_Message `protobuf_oneof:"message"`
	Signature []byte                               `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty" ssz-size:"4595"`
}

func (x *SignedBeaconBlockContainer) Reset() {
	*x = SignedBeaconBlockContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedBeaconBlockContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedBeaconBlockContainer) ProtoMessage() {}

func (x *SignedBeaconBlockContainer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedBeaconBlockContainer.ProtoReflect.Descriptor instead.
func (*SignedBeaconBlockContainer) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{3}
}

func (m *SignedBeaconBlockContainer) GetMessage() isSignedBeaconBlockContainer_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *SignedBeaconBlockContainer) GetCapellaBlock() *BeaconBlock {
	if x, ok := x.GetMessage().(*SignedBeaconBlockContainer_CapellaBlock); ok {
		return x.CapellaBlock
	}
	return nil
}

func (x *SignedBeaconBlockContainer) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type isSignedBeaconBlockContainer_Message interface {
	isSignedBeaconBlockContainer_Message()
}

type SignedBeaconBlockContainer_CapellaBlock struct {
	CapellaBlock *BeaconBlock `protobuf:"bytes,1,opt,name=capella_block,json=capellaBlock,proto3,oneof"`
}

func (*SignedBeaconBlockContainer_CapellaBlock) isSignedBeaconBlockContainer_Message() {}

type BlindedBeaconBlockContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Block:
	//
	//	*BlindedBeaconBlockContainer_CapellaBlock
	Block isBlindedBeaconBlockContainer_Block `protobuf_oneof:"block"`
}

func (x *BlindedBeaconBlockContainer) Reset() {
	*x = BlindedBeaconBlockContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlindedBeaconBlockContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlindedBeaconBlockContainer) ProtoMessage() {}

func (x *BlindedBeaconBlockContainer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlindedBeaconBlockContainer.ProtoReflect.Descriptor instead.
func (*BlindedBeaconBlockContainer) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{4}
}

func (m *BlindedBeaconBlockContainer) GetBlock() isBlindedBeaconBlockContainer_Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (x *BlindedBeaconBlockContainer) GetCapellaBlock() *BlindedBeaconBlock {
	if x, ok := x.GetBlock().(*BlindedBeaconBlockContainer_CapellaBlock); ok {
		return x.CapellaBlock
	}
	return nil
}

type isBlindedBeaconBlockContainer_Block interface {
	isBlindedBeaconBlockContainer_Block()
}

type BlindedBeaconBlockContainer_CapellaBlock struct {
	CapellaBlock *BlindedBeaconBlock `protobuf:"bytes,1,opt,name=capella_block,json=capellaBlock,proto3,oneof"`
}

func (*BlindedBeaconBlockContainer_CapellaBlock) isBlindedBeaconBlockContainer_Block() {}

type SignedBlindedBeaconBlockContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*SignedBlindedBeaconBlockContainer_CapellaBlock
	Message   isSignedBlindedBeaconBlockContainer_Message `protobuf_oneof:"message"`
	Signature []byte                                      `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty" ssz-size:"4595"`
}

func (x *SignedBlindedBeaconBlockContainer) Reset() {
	*x = SignedBlindedBeaconBlockContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedBlindedBeaconBlockContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedBlindedBeaconBlockContainer) ProtoMessage() {}

func (x *SignedBlindedBeaconBlockContainer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedBlindedBeaconBlockContainer.ProtoReflect.Descriptor instead.
func (*SignedBlindedBeaconBlockContainer) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{5}
}

func (m *SignedBlindedBeaconBlockContainer) GetMessage() isSignedBlindedBeaconBlockContainer_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *SignedBlindedBeaconBlockContainer) GetCapellaBlock() *BlindedBeaconBlock {
	if x, ok := x.GetMessage().(*SignedBlindedBeaconBlockContainer_CapellaBlock); ok {
		return x.CapellaBlock
	}
	return nil
}

func (x *SignedBlindedBeaconBlockContainer) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type isSignedBlindedBeaconBlockContainer_Message interface {
	isSignedBlindedBeaconBlockContainer_Message()
}

type SignedBlindedBeaconBlockContainer_CapellaBlock struct {
	CapellaBlock *BlindedBeaconBlock `protobuf:"bytes,1,opt,name=capella_block,json=capellaBlock,proto3,oneof"`
}

func (*SignedBlindedBeaconBlockContainer_CapellaBlock) isSignedBlindedBeaconBlockContainer_Message() {
}

type SignedBeaconBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message   *BeaconBlock `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Signature []byte       `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty" ssz-size:"4595"`
}

func (x *SignedBeaconBlock) Reset() {
	*x = SignedBeaconBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedBeaconBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedBeaconBlock) ProtoMessage() {}

func (x *SignedBeaconBlock) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedBeaconBlock.ProtoReflect.Descriptor instead.
func (*SignedBeaconBlock) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{6}
}

func (x *SignedBeaconBlock) GetMessage() *BeaconBlock {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SignedBeaconBlock) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type SignedBlindedBeaconBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message   *BlindedBeaconBlock `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Signature []byte              `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty" ssz-size:"4595"`
}

func (x *SignedBlindedBeaconBlock) Reset() {
	*x = SignedBlindedBeaconBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedBlindedBeaconBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedBlindedBeaconBlock) ProtoMessage() {}

func (x *SignedBlindedBeaconBlock) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedBlindedBeaconBlock.ProtoReflect.Descriptor instead.
func (*SignedBlindedBeaconBlock) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{7}
}

func (x *SignedBlindedBeaconBlock) GetMessage() *BlindedBeaconBlock {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SignedBlindedBeaconBlock) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type BeaconBlockBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandaoReveal                []byte                              `protobuf:"bytes,1,opt,name=randao_reveal,json=randaoReveal,proto3" json:"randao_reveal,omitempty" ssz-size:"4595"`
	Zond1Data                   *Zond1Data                          `protobuf:"bytes,2,opt,name=zond1_data,json=zond1Data,proto3" json:"zond1_data,omitempty"`
	Graffiti                    []byte                              `protobuf:"bytes,3,opt,name=graffiti,proto3" json:"graffiti,omitempty" ssz-size:"32"`
	ProposerSlashings           []*ProposerSlashing                 `protobuf:"bytes,4,rep,name=proposer_slashings,json=proposerSlashings,proto3" json:"proposer_slashings,omitempty" ssz-max:"16"`
	AttesterSlashings           []*AttesterSlashing                 `protobuf:"bytes,5,rep,name=attester_slashings,json=attesterSlashings,proto3" json:"attester_slashings,omitempty" ssz-max:"2"`
	Attestations                []*Attestation                      `protobuf:"bytes,6,rep,name=attestations,proto3" json:"attestations,omitempty" ssz-max:"128"`
	Deposits                    []*Deposit                          `protobuf:"bytes,7,rep,name=deposits,proto3" json:"deposits,omitempty" ssz-max:"16"`
	VoluntaryExits              []*SignedVoluntaryExit              `protobuf:"bytes,8,rep,name=voluntary_exits,json=voluntaryExits,proto3" json:"voluntary_exits,omitempty" ssz-max:"16"`
	SyncAggregate               *SyncAggregate                      `protobuf:"bytes,9,opt,name=sync_aggregate,json=syncAggregate,proto3" json:"sync_aggregate,omitempty"`
	ExecutionPayload            *v1.ExecutionPayload                `protobuf:"bytes,10,opt,name=execution_payload,json=executionPayload,proto3" json:"execution_payload,omitempty"`
	DilithiumToExecutionChanges []*SignedDilithiumToExecutionChange `protobuf:"bytes,11,rep,name=dilithium_to_execution_changes,json=dilithiumToExecutionChanges,proto3" json:"dilithium_to_execution_changes,omitempty" ssz-max:"16"`
}

func (x *BeaconBlockBody) Reset() {
	*x = BeaconBlockBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconBlockBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconBlockBody) ProtoMessage() {}

func (x *BeaconBlockBody) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconBlockBody.ProtoReflect.Descriptor instead.
func (*BeaconBlockBody) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{8}
}

func (x *BeaconBlockBody) GetRandaoReveal() []byte {
	if x != nil {
		return x.RandaoReveal
	}
	return nil
}

func (x *BeaconBlockBody) GetZond1Data() *Zond1Data {
	if x != nil {
		return x.Zond1Data
	}
	return nil
}

func (x *BeaconBlockBody) GetGraffiti() []byte {
	if x != nil {
		return x.Graffiti
	}
	return nil
}

func (x *BeaconBlockBody) GetProposerSlashings() []*ProposerSlashing {
	if x != nil {
		return x.ProposerSlashings
	}
	return nil
}

func (x *BeaconBlockBody) GetAttesterSlashings() []*AttesterSlashing {
	if x != nil {
		return x.AttesterSlashings
	}
	return nil
}

func (x *BeaconBlockBody) GetAttestations() []*Attestation {
	if x != nil {
		return x.Attestations
	}
	return nil
}

func (x *BeaconBlockBody) GetDeposits() []*Deposit {
	if x != nil {
		return x.Deposits
	}
	return nil
}

func (x *BeaconBlockBody) GetVoluntaryExits() []*SignedVoluntaryExit {
	if x != nil {
		return x.VoluntaryExits
	}
	return nil
}

func (x *BeaconBlockBody) GetSyncAggregate() *SyncAggregate {
	if x != nil {
		return x.SyncAggregate
	}
	return nil
}

func (x *BeaconBlockBody) GetExecutionPayload() *v1.ExecutionPayload {
	if x != nil {
		return x.ExecutionPayload
	}
	return nil
}

func (x *BeaconBlockBody) GetDilithiumToExecutionChanges() []*SignedDilithiumToExecutionChange {
	if x != nil {
		return x.DilithiumToExecutionChanges
	}
	return nil
}

type BlindedBeaconBlockBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RandaoReveal                []byte                              `protobuf:"bytes,1,opt,name=randao_reveal,json=randaoReveal,proto3" json:"randao_reveal,omitempty" ssz-size:"4595"`
	Zond1Data                   *Zond1Data                          `protobuf:"bytes,2,opt,name=zond1_data,json=zond1Data,proto3" json:"zond1_data,omitempty"`
	Graffiti                    []byte                              `protobuf:"bytes,3,opt,name=graffiti,proto3" json:"graffiti,omitempty" ssz-size:"32"`
	ProposerSlashings           []*ProposerSlashing                 `protobuf:"bytes,4,rep,name=proposer_slashings,json=proposerSlashings,proto3" json:"proposer_slashings,omitempty" ssz-max:"16"`
	AttesterSlashings           []*AttesterSlashing                 `protobuf:"bytes,5,rep,name=attester_slashings,json=attesterSlashings,proto3" json:"attester_slashings,omitempty" ssz-max:"2"`
	Attestations                []*Attestation                      `protobuf:"bytes,6,rep,name=attestations,proto3" json:"attestations,omitempty" ssz-max:"128"`
	Deposits                    []*Deposit                          `protobuf:"bytes,7,rep,name=deposits,proto3" json:"deposits,omitempty" ssz-max:"16"`
	VoluntaryExits              []*SignedVoluntaryExit              `protobuf:"bytes,8,rep,name=voluntary_exits,json=voluntaryExits,proto3" json:"voluntary_exits,omitempty" ssz-max:"16"`
	SyncAggregate               *SyncAggregate                      `protobuf:"bytes,9,opt,name=sync_aggregate,json=syncAggregate,proto3" json:"sync_aggregate,omitempty"`
	ExecutionPayloadHeader      *v1.ExecutionPayloadHeader          `protobuf:"bytes,10,opt,name=execution_payload_header,json=executionPayloadHeader,proto3" json:"execution_payload_header,omitempty"`
	DilithiumToExecutionChanges []*SignedDilithiumToExecutionChange `protobuf:"bytes,11,rep,name=dilithium_to_execution_changes,json=dilithiumToExecutionChanges,proto3" json:"dilithium_to_execution_changes,omitempty" ssz-max:"16"`
}

func (x *BlindedBeaconBlockBody) Reset() {
	*x = BlindedBeaconBlockBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlindedBeaconBlockBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlindedBeaconBlockBody) ProtoMessage() {}

func (x *BlindedBeaconBlockBody) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlindedBeaconBlockBody.ProtoReflect.Descriptor instead.
func (*BlindedBeaconBlockBody) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{9}
}

func (x *BlindedBeaconBlockBody) GetRandaoReveal() []byte {
	if x != nil {
		return x.RandaoReveal
	}
	return nil
}

func (x *BlindedBeaconBlockBody) GetZond1Data() *Zond1Data {
	if x != nil {
		return x.Zond1Data
	}
	return nil
}

func (x *BlindedBeaconBlockBody) GetGraffiti() []byte {
	if x != nil {
		return x.Graffiti
	}
	return nil
}

func (x *BlindedBeaconBlockBody) GetProposerSlashings() []*ProposerSlashing {
	if x != nil {
		return x.ProposerSlashings
	}
	return nil
}

func (x *BlindedBeaconBlockBody) GetAttesterSlashings() []*AttesterSlashing {
	if x != nil {
		return x.AttesterSlashings
	}
	return nil
}

func (x *BlindedBeaconBlockBody) GetAttestations() []*Attestation {
	if x != nil {
		return x.Attestations
	}
	return nil
}

func (x *BlindedBeaconBlockBody) GetDeposits() []*Deposit {
	if x != nil {
		return x.Deposits
	}
	return nil
}

func (x *BlindedBeaconBlockBody) GetVoluntaryExits() []*SignedVoluntaryExit {
	if x != nil {
		return x.VoluntaryExits
	}
	return nil
}

func (x *BlindedBeaconBlockBody) GetSyncAggregate() *SyncAggregate {
	if x != nil {
		return x.SyncAggregate
	}
	return nil
}

func (x *BlindedBeaconBlockBody) GetExecutionPayloadHeader() *v1.ExecutionPayloadHeader {
	if x != nil {
		return x.ExecutionPayloadHeader
	}
	return nil
}

func (x *BlindedBeaconBlockBody) GetDilithiumToExecutionChanges() []*SignedDilithiumToExecutionChange {
	if x != nil {
		return x.DilithiumToExecutionChanges
	}
	return nil
}

type ProposerSlashing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedHeader_1 *SignedBeaconBlockHeader `protobuf:"bytes,2,opt,name=signed_header_1,json=signedHeader1,proto3" json:"signed_header_1,omitempty"`
	SignedHeader_2 *SignedBeaconBlockHeader `protobuf:"bytes,3,opt,name=signed_header_2,json=signedHeader2,proto3" json:"signed_header_2,omitempty"`
}

func (x *ProposerSlashing) Reset() {
	*x = ProposerSlashing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposerSlashing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposerSlashing) ProtoMessage() {}

func (x *ProposerSlashing) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposerSlashing.ProtoReflect.Descriptor instead.
func (*ProposerSlashing) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{10}
}

func (x *ProposerSlashing) GetSignedHeader_1() *SignedBeaconBlockHeader {
	if x != nil {
		return x.SignedHeader_1
	}
	return nil
}

func (x *ProposerSlashing) GetSignedHeader_2() *SignedBeaconBlockHeader {
	if x != nil {
		return x.SignedHeader_2
	}
	return nil
}

type AttesterSlashing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attestation_1 *IndexedAttestation `protobuf:"bytes,1,opt,name=attestation_1,json=attestation1,proto3" json:"attestation_1,omitempty"`
	Attestation_2 *IndexedAttestation `protobuf:"bytes,2,opt,name=attestation_2,json=attestation2,proto3" json:"attestation_2,omitempty"`
}

func (x *AttesterSlashing) Reset() {
	*x = AttesterSlashing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttesterSlashing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttesterSlashing) ProtoMessage() {}

func (x *AttesterSlashing) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttesterSlashing.ProtoReflect.Descriptor instead.
func (*AttesterSlashing) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{11}
}

func (x *AttesterSlashing) GetAttestation_1() *IndexedAttestation {
	if x != nil {
		return x.Attestation_1
	}
	return nil
}

func (x *AttesterSlashing) GetAttestation_2() *IndexedAttestation {
	if x != nil {
		return x.Attestation_2
	}
	return nil
}

type Deposit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proof [][]byte      `protobuf:"bytes,1,rep,name=proof,proto3" json:"proof,omitempty" ssz-size:"33,32"`
	Data  *Deposit_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Deposit) Reset() {
	*x = Deposit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deposit) ProtoMessage() {}

func (x *Deposit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deposit.ProtoReflect.Descriptor instead.
func (*Deposit) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{12}
}

func (x *Deposit) GetProof() [][]byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *Deposit) GetData() *Deposit_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type VoluntaryExit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch          github_com_theQRL_qrysm_v4_consensus_types_primitives.Epoch          `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty" cast-type:"github.com/theQRL/qrysm/v4/consensus-types/primitives.Epoch"`
	ValidatorIndex github_com_theQRL_qrysm_v4_consensus_types_primitives.ValidatorIndex `protobuf:"varint,2,opt,name=validator_index,json=validatorIndex,proto3" json:"validator_index,omitempty" cast-type:"github.com/theQRL/qrysm/v4/consensus-types/primitives.ValidatorIndex"`
}

func (x *VoluntaryExit) Reset() {
	*x = VoluntaryExit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoluntaryExit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoluntaryExit) ProtoMessage() {}

func (x *VoluntaryExit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoluntaryExit.ProtoReflect.Descriptor instead.
func (*VoluntaryExit) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{13}
}

func (x *VoluntaryExit) GetEpoch() github_com_theQRL_qrysm_v4_consensus_types_primitives.Epoch {
	if x != nil {
		return x.Epoch
	}
	return github_com_theQRL_qrysm_v4_consensus_types_primitives.Epoch(0)
}

func (x *VoluntaryExit) GetValidatorIndex() github_com_theQRL_qrysm_v4_consensus_types_primitives.ValidatorIndex {
	if x != nil {
		return x.ValidatorIndex
	}
	return github_com_theQRL_qrysm_v4_consensus_types_primitives.ValidatorIndex(0)
}

type SignedVoluntaryExit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message   *VoluntaryExit `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Signature []byte         `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty" ssz-size:"4595"`
}

func (x *SignedVoluntaryExit) Reset() {
	*x = SignedVoluntaryExit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedVoluntaryExit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedVoluntaryExit) ProtoMessage() {}

func (x *SignedVoluntaryExit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedVoluntaryExit.ProtoReflect.Descriptor instead.
func (*SignedVoluntaryExit) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{14}
}

func (x *SignedVoluntaryExit) GetMessage() *VoluntaryExit {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SignedVoluntaryExit) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type Zond1Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepositRoot  []byte `protobuf:"bytes,1,opt,name=deposit_root,json=depositRoot,proto3" json:"deposit_root,omitempty" ssz-size:"32"`
	DepositCount uint64 `protobuf:"varint,2,opt,name=deposit_count,json=depositCount,proto3" json:"deposit_count,omitempty"`
	BlockHash    []byte `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty" ssz-size:"32"`
}

func (x *Zond1Data) Reset() {
	*x = Zond1Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Zond1Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zond1Data) ProtoMessage() {}

func (x *Zond1Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zond1Data.ProtoReflect.Descriptor instead.
func (*Zond1Data) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{15}
}

func (x *Zond1Data) GetDepositRoot() []byte {
	if x != nil {
		return x.DepositRoot
	}
	return nil
}

func (x *Zond1Data) GetDepositCount() uint64 {
	if x != nil {
		return x.DepositCount
	}
	return 0
}

func (x *Zond1Data) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

type BeaconBlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot          github_com_theQRL_qrysm_v4_consensus_types_primitives.Slot           `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty" cast-type:"github.com/theQRL/qrysm/v4/consensus-types/primitives.Slot"`
	ProposerIndex github_com_theQRL_qrysm_v4_consensus_types_primitives.ValidatorIndex `protobuf:"varint,2,opt,name=proposer_index,json=proposerIndex,proto3" json:"proposer_index,omitempty" cast-type:"github.com/theQRL/qrysm/v4/consensus-types/primitives.ValidatorIndex"`
	ParentRoot    []byte                                                               `protobuf:"bytes,3,opt,name=parent_root,json=parentRoot,proto3" json:"parent_root,omitempty" ssz-size:"32"`
	StateRoot     []byte                                                               `protobuf:"bytes,4,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty" ssz-size:"32"`
	BodyRoot      []byte                                                               `protobuf:"bytes,5,opt,name=body_root,json=bodyRoot,proto3" json:"body_root,omitempty" ssz-size:"32"`
}

func (x *BeaconBlockHeader) Reset() {
	*x = BeaconBlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconBlockHeader) ProtoMessage() {}

func (x *BeaconBlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconBlockHeader.ProtoReflect.Descriptor instead.
func (*BeaconBlockHeader) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{16}
}

func (x *BeaconBlockHeader) GetSlot() github_com_theQRL_qrysm_v4_consensus_types_primitives.Slot {
	if x != nil {
		return x.Slot
	}
	return github_com_theQRL_qrysm_v4_consensus_types_primitives.Slot(0)
}

func (x *BeaconBlockHeader) GetProposerIndex() github_com_theQRL_qrysm_v4_consensus_types_primitives.ValidatorIndex {
	if x != nil {
		return x.ProposerIndex
	}
	return github_com_theQRL_qrysm_v4_consensus_types_primitives.ValidatorIndex(0)
}

func (x *BeaconBlockHeader) GetParentRoot() []byte {
	if x != nil {
		return x.ParentRoot
	}
	return nil
}

func (x *BeaconBlockHeader) GetStateRoot() []byte {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *BeaconBlockHeader) GetBodyRoot() []byte {
	if x != nil {
		return x.BodyRoot
	}
	return nil
}

type SignedBeaconBlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message   *BeaconBlockHeader `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Signature []byte             `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty" ssz-size:"4595"`
}

func (x *SignedBeaconBlockHeader) Reset() {
	*x = SignedBeaconBlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedBeaconBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedBeaconBlockHeader) ProtoMessage() {}

func (x *SignedBeaconBlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedBeaconBlockHeader.ProtoReflect.Descriptor instead.
func (*SignedBeaconBlockHeader) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{17}
}

func (x *SignedBeaconBlockHeader) GetMessage() *BeaconBlockHeader {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SignedBeaconBlockHeader) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type IndexedAttestation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttestingIndices []uint64         `protobuf:"varint,1,rep,packed,name=attesting_indices,json=attestingIndices,proto3" json:"attesting_indices,omitempty" ssz-max:"128"`
	Data             *AttestationData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Signatures       [][]byte         `protobuf:"bytes,3,rep,name=signatures,proto3" json:"signatures,omitempty" ssz-max:"128" ssz-size:"?,4595"`
}

func (x *IndexedAttestation) Reset() {
	*x = IndexedAttestation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexedAttestation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexedAttestation) ProtoMessage() {}

func (x *IndexedAttestation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexedAttestation.ProtoReflect.Descriptor instead.
func (*IndexedAttestation) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{18}
}

func (x *IndexedAttestation) GetAttestingIndices() []uint64 {
	if x != nil {
		return x.AttestingIndices
	}
	return nil
}

func (x *IndexedAttestation) GetData() *AttestationData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *IndexedAttestation) GetSignatures() [][]byte {
	if x != nil {
		return x.Signatures
	}
	return nil
}

type SyncAggregate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncCommitteeBits       github_com_theQRL_go_bitfield.Bitvector16 `protobuf:"bytes,1,opt,name=sync_committee_bits,json=syncCommitteeBits,proto3" json:"sync_committee_bits,omitempty" cast-type:"github.com/theQRL/go-bitfield.Bitvector16" ssz-size:"2"`
	SyncCommitteeSignatures [][]byte                                  `protobuf:"bytes,2,rep,name=sync_committee_signatures,json=syncCommitteeSignatures,proto3" json:"sync_committee_signatures,omitempty" ssz-max:"16" ssz-size:"?,4595"`
}

func (x *SyncAggregate) Reset() {
	*x = SyncAggregate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncAggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncAggregate) ProtoMessage() {}

func (x *SyncAggregate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncAggregate.ProtoReflect.Descriptor instead.
func (*SyncAggregate) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{19}
}

func (x *SyncAggregate) GetSyncCommitteeBits() github_com_theQRL_go_bitfield.Bitvector16 {
	if x != nil {
		return x.SyncCommitteeBits
	}
	return github_com_theQRL_go_bitfield.Bitvector16(nil)
}

func (x *SyncAggregate) GetSyncCommitteeSignatures() [][]byte {
	if x != nil {
		return x.SyncCommitteeSignatures
	}
	return nil
}

type Deposit_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pubkey                []byte `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty" spec-name:"pubkey" ssz-size:"2592"`
	WithdrawalCredentials []byte `protobuf:"bytes,2,opt,name=withdrawal_credentials,json=withdrawalCredentials,proto3" json:"withdrawal_credentials,omitempty" ssz-size:"32"`
	Amount                uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Signature             []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty" ssz-size:"4595"`
}

func (x *Deposit_Data) Reset() {
	*x = Deposit_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deposit_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deposit_Data) ProtoMessage() {}

func (x *Deposit_Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_zond_v1_beacon_block_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deposit_Data.ProtoReflect.Descriptor instead.
func (*Deposit_Data) Descriptor() ([]byte, []int) {
	return file_proto_zond_v1_beacon_block_proto_rawDescGZIP(), []int{12, 0}
}

func (x *Deposit_Data) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *Deposit_Data) GetWithdrawalCredentials() []byte {
	if x != nil {
		return x.WithdrawalCredentials
	}
	return nil
}

func (x *Deposit_Data) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Deposit_Data) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_proto_zond_v1_beacon_block_proto protoreflect.FileDescriptor

var file_proto_zond_v1_beacon_block_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x7a, 0x6f, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f,
	0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x7a, 0x6f, 0x6e, 0x64, 0x2f, 0x65, 0x78, 0x74, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x7a, 0x6f, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x7a, 0x6f, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x02, 0x0a,
	0x0b, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x52, 0x0a, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x3e, 0x82, 0xb5, 0x18, 0x3a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x51, 0x52,
	0x4c, 0x2f, 0x71, 0x72, 0x79, 0x73, 0x6d, 0x2f, 0x76, 0x34, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x73, 0x75, 0x73, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x69, 0x6d, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74,
	0x12, 0x6f, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48, 0x82, 0xb5, 0x18, 0x44, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x51, 0x52, 0x4c, 0x2f,
	0x71, 0x72, 0x79, 0x73, 0x6d, 0x2f, 0x76, 0x34, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73,
	0x75, 0x73, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x27, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0x8a, 0xb5, 0x18, 0x02, 0x33, 0x32, 0x52, 0x0a,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06,
	0x8a, 0xb5, 0x18, 0x02, 0x33, 0x32, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x74, 0x12, 0x33, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x64, 0x79,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xe5, 0x02, 0x0a, 0x12, 0x42, 0x6c, 0x69, 0x6e, 0x64,
	0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x52, 0x0a,
	0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x3e, 0x82, 0xb5, 0x18,
	0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x51,
	0x52, 0x4c, 0x2f, 0x71, 0x72, 0x79, 0x73, 0x6d, 0x2f, 0x76, 0x34, 0x2f, 0x63, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x73, 0x75, 0x73, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x69, 0x6d,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f,
	0x74, 0x12, 0x6f, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48, 0x82, 0xb5, 0x18, 0x44, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x51, 0x52, 0x4c,
	0x2f, 0x71, 0x72, 0x79, 0x73, 0x6d, 0x2f, 0x76, 0x34, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x27, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6f,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0x8a, 0xb5, 0x18, 0x02, 0x33, 0x32, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x06, 0x8a, 0xb5, 0x18, 0x02, 0x33, 0x32, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6f, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x63,
	0x0a, 0x14, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x61, 0x70, 0x65, 0x6c, 0x6c,
	0x61, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x61,
	0x70, 0x65, 0x6c, 0x6c, 0x61, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x07, 0x0a, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x22, 0x93, 0x01, 0x0a, 0x1a, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x65,
	0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x61, 0x70, 0x65, 0x6c, 0x6c, 0x61, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x68, 0x65, 0x71,
	0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x65, 0x6c, 0x6c,
	0x61, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x08, 0x8a, 0xb5, 0x18, 0x04, 0x34,
	0x35, 0x39, 0x35, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x71, 0x0a, 0x1b, 0x42, 0x6c, 0x69,
	0x6e, 0x64, 0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x61, 0x70, 0x65,
	0x6c, 0x6c, 0x61, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x65, 0x6c, 0x6c, 0x61, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x42, 0x07, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0xa1, 0x01, 0x0a,
	0x21, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x65,
	0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x61, 0x70, 0x65, 0x6c, 0x6c, 0x61, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x68, 0x65, 0x71,
	0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x69, 0x6e, 0x64,
	0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52,
	0x0c, 0x63, 0x61, 0x70, 0x65, 0x6c, 0x6c, 0x61, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x26, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x08, 0x8a, 0xb5, 0x18, 0x04, 0x34, 0x35, 0x39, 0x35, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x72, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x35, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e,
	0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x08, 0x8a, 0xb5, 0x18, 0x04, 0x34, 0x35, 0x39, 0x35, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x18, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42,
	0x6c, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x26, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x08, 0x8a, 0xb5, 0x18, 0x04, 0x34, 0x35, 0x39, 0x35, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xc2, 0x06, 0x0a, 0x0f, 0x42, 0x65, 0x61, 0x63,
	0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x2d, 0x0a, 0x0d, 0x72,
	0x61, 0x6e, 0x64, 0x61, 0x6f, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x08, 0x8a, 0xb5, 0x18, 0x04, 0x34, 0x35, 0x39, 0x35, 0x52, 0x0c, 0x72, 0x61,
	0x6e, 0x64, 0x61, 0x6f, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x0a, 0x7a, 0x6f,
	0x6e, 0x64, 0x31, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x5a, 0x6f, 0x6e, 0x64, 0x31, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x7a, 0x6f, 0x6e, 0x64, 0x31,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x66, 0x66, 0x69, 0x74, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0x8a, 0xb5, 0x18, 0x02, 0x33, 0x32, 0x52, 0x08,
	0x67, 0x72, 0x61, 0x66, 0x66, 0x69, 0x74, 0x69, 0x12, 0x57, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x42, 0x06, 0x92, 0xb5, 0x18, 0x02, 0x31, 0x36, 0x52, 0x11,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x56, 0x0a, 0x12, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6c,
	0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x42,
	0x05, 0x92, 0xb5, 0x18, 0x01, 0x32, 0x52, 0x11, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x48, 0x0a, 0x0c, 0x61, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x92, 0xb5,
	0x18, 0x03, 0x31, 0x32, 0x38, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a,
	0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x42, 0x06,
	0x92, 0xb5, 0x18, 0x02, 0x31, 0x36, 0x52, 0x08, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73,
	0x12, 0x54, 0x0a, 0x0f, 0x76, 0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x65, 0x78,
	0x69, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x68, 0x65, 0x71,
	0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x45, 0x78, 0x69, 0x74, 0x42, 0x06,
	0x92, 0xb5, 0x18, 0x02, 0x31, 0x36, 0x52, 0x0e, 0x76, 0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72,
	0x79, 0x45, 0x78, 0x69, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x0e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x73,
	0x79, 0x6e, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x11,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x10, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x7d, 0x0a,
	0x1e, 0x64, 0x69, 0x6c, 0x69, 0x74, 0x68, 0x69, 0x75, 0x6d, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a,
	0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x44, 0x69, 0x6c,
	0x69, 0x74, 0x68, 0x69, 0x75, 0x6d, 0x54, 0x6f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x06, 0x92, 0xb5, 0x18, 0x02, 0x31, 0x36, 0x52,
	0x1b, 0x64, 0x69, 0x6c, 0x69, 0x74, 0x68, 0x69, 0x75, 0x6d, 0x54, 0x6f, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0xdc, 0x06, 0x0a,
	0x16, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x2d, 0x0a, 0x0d, 0x72, 0x61, 0x6e, 0x64, 0x61,
	0x6f, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x08,
	0x8a, 0xb5, 0x18, 0x04, 0x34, 0x35, 0x39, 0x35, 0x52, 0x0c, 0x72, 0x61, 0x6e, 0x64, 0x61, 0x6f,
	0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x0a, 0x7a, 0x6f, 0x6e, 0x64, 0x31, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x68, 0x65,
	0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x5a, 0x6f, 0x6e, 0x64,
	0x31, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x7a, 0x6f, 0x6e, 0x64, 0x31, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x22, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x66, 0x66, 0x69, 0x74, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x06, 0x8a, 0xb5, 0x18, 0x02, 0x33, 0x32, 0x52, 0x08, 0x67, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x74, 0x69, 0x12, 0x57, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72,
	0x5f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x42, 0x06, 0x92, 0xb5, 0x18, 0x02, 0x31, 0x36, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x56, 0x0a,
	0x12, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x68, 0x65, 0x71,
	0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x42, 0x05, 0x92, 0xb5, 0x18,
	0x01, 0x32, 0x52, 0x11, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x48, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x68,
	0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x92, 0xb5, 0x18, 0x03, 0x31, 0x32,
	0x38, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3b, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x42, 0x06, 0x92, 0xb5, 0x18, 0x02,
	0x31, 0x36, 0x52, 0x08, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x12, 0x54, 0x0a, 0x0f,
	0x76, 0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a,
	0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x56, 0x6f, 0x6c,
	0x75, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x45, 0x78, 0x69, 0x74, 0x42, 0x06, 0x92, 0xb5, 0x18, 0x02,
	0x31, 0x36, 0x52, 0x0e, 0x76, 0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x45, 0x78, 0x69,
	0x74, 0x73, 0x12, 0x44, 0x0a, 0x0e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x68, 0x65,
	0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x73, 0x79, 0x6e, 0x63, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x62, 0x0a, 0x18, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x68, 0x65,
	0x71, 0x72, 0x6c, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x16, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x7d, 0x0a, 0x1e,
	0x64, 0x69, 0x6c, 0x69, 0x74, 0x68, 0x69, 0x75, 0x6d, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x44, 0x69, 0x6c, 0x69,
	0x74, 0x68, 0x69, 0x75, 0x6d, 0x54, 0x6f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x06, 0x92, 0xb5, 0x18, 0x02, 0x31, 0x36, 0x52, 0x1b,
	0x64, 0x69, 0x6c, 0x69, 0x74, 0x68, 0x69, 0x75, 0x6d, 0x54, 0x6f, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x10,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x12, 0x4f, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x5f, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x68, 0x65, 0x71,
	0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x31, 0x12, 0x4f, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x5f, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x68, 0x65,
	0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x32, 0x22, 0xa4, 0x01, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x47, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31,
	0x12, 0x47, 0x0a, 0x0d, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c,
	0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64,
	0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x61, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x22, 0x90, 0x02, 0x0a, 0x07, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0c, 0x42, 0x09, 0x8a, 0xb5, 0x18, 0x05, 0x33, 0x33, 0x2c, 0x33, 0x32, 0x52,
	0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xb1, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2a, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x12, 0x8a, 0xb5, 0x18, 0x04, 0x32, 0x35, 0x39, 0x32, 0x9a, 0xb5, 0x18, 0x06, 0x70,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x3d, 0x0a,
	0x16, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0x8a,
	0xb5, 0x18, 0x02, 0x33, 0x32, 0x52, 0x15, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x08, 0x8a, 0xb5, 0x18, 0x04, 0x34, 0x35, 0x39,
	0x35, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xd9, 0x01, 0x0a,
	0x0d, 0x56, 0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x45, 0x78, 0x69, 0x74, 0x12, 0x55,
	0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x3f, 0x82,
	0xb5, 0x18, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68,
	0x65, 0x51, 0x52, 0x4c, 0x2f, 0x71, 0x72, 0x79, 0x73, 0x6d, 0x2f, 0x76, 0x34, 0x2f, 0x63, 0x6f,
	0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72,
	0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x05,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x71, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48,
	0x82, 0xb5, 0x18, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74,
	0x68, 0x65, 0x51, 0x52, 0x4c, 0x2f, 0x71, 0x72, 0x79, 0x73, 0x6d, 0x2f, 0x76, 0x34, 0x2f, 0x63,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70,
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x76, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x45, 0x78, 0x69, 0x74, 0x12,
	0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x45, 0x78, 0x69, 0x74, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x08, 0x8a, 0xb5, 0x18,
	0x04, 0x34, 0x35, 0x39, 0x35, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x22, 0x82, 0x01, 0x0a, 0x09, 0x5a, 0x6f, 0x6e, 0x64, 0x31, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29,
	0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0x8a, 0xb5, 0x18, 0x02, 0x33, 0x32, 0x52, 0x0b, 0x64, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x42, 0x06, 0x8a, 0xb5, 0x18, 0x02, 0x33, 0x32, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x22, 0xcd, 0x02, 0x0a, 0x11, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x04, 0x73,
	0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x3e, 0x82, 0xb5, 0x18, 0x3a, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x51, 0x52, 0x4c,
	0x2f, 0x71, 0x72, 0x79, 0x73, 0x6d, 0x2f, 0x76, 0x34, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x73, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12,
	0x6f, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x48, 0x82, 0xb5, 0x18, 0x44, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x51, 0x52, 0x4c, 0x2f, 0x71,
	0x72, 0x79, 0x73, 0x6d, 0x2f, 0x76, 0x34, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x27, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0x8a, 0xb5, 0x18, 0x02, 0x33, 0x32, 0x52, 0x0a, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x06, 0x8a,
	0xb5, 0x18, 0x02, 0x33, 0x32, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74,
	0x12, 0x23, 0x0a, 0x09, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x42, 0x06, 0x8a, 0xb5, 0x18, 0x02, 0x33, 0x32, 0x52, 0x08, 0x62, 0x6f, 0x64,
	0x79, 0x52, 0x6f, 0x6f, 0x74, 0x22, 0x7e, 0x0a, 0x17, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x3b, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x08, 0x8a, 0xb5, 0x18, 0x04, 0x34, 0x35, 0x39, 0x35, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x64, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x11,
	0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x42, 0x07, 0x92, 0xb5, 0x18, 0x03, 0x31, 0x32, 0x38,
	0x52, 0x10, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x42, 0x11, 0x8a, 0xb5, 0x18,
	0x06, 0x3f, 0x2c, 0x34, 0x35, 0x39, 0x35, 0x92, 0xb5, 0x18, 0x03, 0x31, 0x32, 0x38, 0x52, 0x0a,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x0d, 0x53,
	0x79, 0x6e, 0x63, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x62, 0x0a, 0x13,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x5f, 0x62,
	0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x32, 0x82, 0xb5, 0x18, 0x29, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x51, 0x52, 0x4c,
	0x2f, 0x67, 0x6f, 0x2d, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x42, 0x69, 0x74,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x31, 0x36, 0x8a, 0xb5, 0x18, 0x01, 0x32, 0x52, 0x11, 0x73,
	0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x42, 0x69, 0x74, 0x73,
	0x12, 0x4c, 0x0a, 0x19, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0c, 0x42, 0x10, 0x8a, 0xb5, 0x18, 0x06, 0x3f, 0x2c, 0x34, 0x35, 0x39, 0x35, 0x92,
	0xb5, 0x18, 0x02, 0x31, 0x36, 0x52, 0x17, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x42, 0x74,
	0x0a, 0x12, 0x6f, 0x72, 0x67, 0x2e, 0x74, 0x68, 0x65, 0x71, 0x72, 0x6c, 0x2e, 0x7a, 0x6f, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x51, 0x52, 0x4c, 0x2f, 0x71, 0x72, 0x79, 0x73,
	0x6d, 0x2f, 0x76, 0x34, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x7a, 0x6f, 0x6e, 0x64, 0x2f,
	0x76, 0x31, 0xaa, 0x02, 0x0e, 0x54, 0x68, 0x65, 0x51, 0x52, 0x4c, 0x2e, 0x5a, 0x6f, 0x6e, 0x64,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x0e, 0x54, 0x68, 0x65, 0x51, 0x52, 0x4c, 0x5c, 0x5a, 0x6f, 0x6e,
	0x64, 0x5c, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_zond_v1_beacon_block_proto_rawDescOnce sync.Once
	file_proto_zond_v1_beacon_block_proto_rawDescData = file_proto_zond_v1_beacon_block_proto_rawDesc
)

func file_proto_zond_v1_beacon_block_proto_rawDescGZIP() []byte {
	file_proto_zond_v1_beacon_block_proto_rawDescOnce.Do(func() {
		file_proto_zond_v1_beacon_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_zond_v1_beacon_block_proto_rawDescData)
	})
	return file_proto_zond_v1_beacon_block_proto_rawDescData
}

var file_proto_zond_v1_beacon_block_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_proto_zond_v1_beacon_block_proto_goTypes = []interface{}{
	(*BeaconBlock)(nil),                       // 0: theqrl.zond.v1.BeaconBlock
	(*BlindedBeaconBlock)(nil),                // 1: theqrl.zond.v1.BlindedBeaconBlock
	(*BeaconBlockContainer)(nil),              // 2: theqrl.zond.v1.BeaconBlockContainer
	(*SignedBeaconBlockContainer)(nil),        // 3: theqrl.zond.v1.SignedBeaconBlockContainer
	(*BlindedBeaconBlockContainer)(nil),       // 4: theqrl.zond.v1.BlindedBeaconBlockContainer
	(*SignedBlindedBeaconBlockContainer)(nil), // 5: theqrl.zond.v1.SignedBlindedBeaconBlockContainer
	(*SignedBeaconBlock)(nil),                 // 6: theqrl.zond.v1.SignedBeaconBlock
	(*SignedBlindedBeaconBlock)(nil),          // 7: theqrl.zond.v1.SignedBlindedBeaconBlock
	(*BeaconBlockBody)(nil),                   // 8: theqrl.zond.v1.BeaconBlockBody
	(*BlindedBeaconBlockBody)(nil),            // 9: theqrl.zond.v1.BlindedBeaconBlockBody
	(*ProposerSlashing)(nil),                  // 10: theqrl.zond.v1.ProposerSlashing
	(*AttesterSlashing)(nil),                  // 11: theqrl.zond.v1.AttesterSlashing
	(*Deposit)(nil),                           // 12: theqrl.zond.v1.Deposit
	(*VoluntaryExit)(nil),                     // 13: theqrl.zond.v1.VoluntaryExit
	(*SignedVoluntaryExit)(nil),               // 14: theqrl.zond.v1.SignedVoluntaryExit
	(*Zond1Data)(nil),                         // 15: theqrl.zond.v1.Zond1Data
	(*BeaconBlockHeader)(nil),                 // 16: theqrl.zond.v1.BeaconBlockHeader
	(*SignedBeaconBlockHeader)(nil),           // 17: theqrl.zond.v1.SignedBeaconBlockHeader
	(*IndexedAttestation)(nil),                // 18: theqrl.zond.v1.IndexedAttestation
	(*SyncAggregate)(nil),                     // 19: theqrl.zond.v1.SyncAggregate
	(*Deposit_Data)(nil),                      // 20: theqrl.zond.v1.Deposit.Data
	(*Attestation)(nil),                       // 21: theqrl.zond.v1.Attestation
	(*v1.ExecutionPayload)(nil),               // 22: theqrl.engine.v1.ExecutionPayload
	(*SignedDilithiumToExecutionChange)(nil),  // 23: theqrl.zond.v1.SignedDilithiumToExecutionChange
	(*v1.ExecutionPayloadHeader)(nil),         // 24: theqrl.engine.v1.ExecutionPayloadHeader
	(*AttestationData)(nil),                   // 25: theqrl.zond.v1.AttestationData
}
var file_proto_zond_v1_beacon_block_proto_depIdxs = []int32{
	8,  // 0: theqrl.zond.v1.BeaconBlock.body:type_name -> theqrl.zond.v1.BeaconBlockBody
	9,  // 1: theqrl.zond.v1.BlindedBeaconBlock.body:type_name -> theqrl.zond.v1.BlindedBeaconBlockBody
	0,  // 2: theqrl.zond.v1.BeaconBlockContainer.capella_block:type_name -> theqrl.zond.v1.BeaconBlock
	0,  // 3: theqrl.zond.v1.SignedBeaconBlockContainer.capella_block:type_name -> theqrl.zond.v1.BeaconBlock
	1,  // 4: theqrl.zond.v1.BlindedBeaconBlockContainer.capella_block:type_name -> theqrl.zond.v1.BlindedBeaconBlock
	1,  // 5: theqrl.zond.v1.SignedBlindedBeaconBlockContainer.capella_block:type_name -> theqrl.zond.v1.BlindedBeaconBlock
	0,  // 6: theqrl.zond.v1.SignedBeaconBlock.message:type_name -> theqrl.zond.v1.BeaconBlock
	1,  // 7: theqrl.zond.v1.SignedBlindedBeaconBlock.message:type_name -> theqrl.zond.v1.BlindedBeaconBlock
	15, // 8: theqrl.zond.v1.BeaconBlockBody.zond1_data:type_name -> theqrl.zond.v1.Zond1Data
	10, // 9: theqrl.zond.v1.BeaconBlockBody.proposer_slashings:type_name -> theqrl.zond.v1.ProposerSlashing
	11, // 10: theqrl.zond.v1.BeaconBlockBody.attester_slashings:type_name -> theqrl.zond.v1.AttesterSlashing
	21, // 11: theqrl.zond.v1.BeaconBlockBody.attestations:type_name -> theqrl.zond.v1.Attestation
	12, // 12: theqrl.zond.v1.BeaconBlockBody.deposits:type_name -> theqrl.zond.v1.Deposit
	14, // 13: theqrl.zond.v1.BeaconBlockBody.voluntary_exits:type_name -> theqrl.zond.v1.SignedVoluntaryExit
	19, // 14: theqrl.zond.v1.BeaconBlockBody.sync_aggregate:type_name -> theqrl.zond.v1.SyncAggregate
	22, // 15: theqrl.zond.v1.BeaconBlockBody.execution_payload:type_name -> theqrl.engine.v1.ExecutionPayload
	23, // 16: theqrl.zond.v1.BeaconBlockBody.dilithium_to_execution_changes:type_name -> theqrl.zond.v1.SignedDilithiumToExecutionChange
	15, // 17: theqrl.zond.v1.BlindedBeaconBlockBody.zond1_data:type_name -> theqrl.zond.v1.Zond1Data
	10, // 18: theqrl.zond.v1.BlindedBeaconBlockBody.proposer_slashings:type_name -> theqrl.zond.v1.ProposerSlashing
	11, // 19: theqrl.zond.v1.BlindedBeaconBlockBody.attester_slashings:type_name -> theqrl.zond.v1.AttesterSlashing
	21, // 20: theqrl.zond.v1.BlindedBeaconBlockBody.attestations:type_name -> theqrl.zond.v1.Attestation
	12, // 21: theqrl.zond.v1.BlindedBeaconBlockBody.deposits:type_name -> theqrl.zond.v1.Deposit
	14, // 22: theqrl.zond.v1.BlindedBeaconBlockBody.voluntary_exits:type_name -> theqrl.zond.v1.SignedVoluntaryExit
	19, // 23: theqrl.zond.v1.BlindedBeaconBlockBody.sync_aggregate:type_name -> theqrl.zond.v1.SyncAggregate
	24, // 24: theqrl.zond.v1.BlindedBeaconBlockBody.execution_payload_header:type_name -> theqrl.engine.v1.ExecutionPayloadHeader
	23, // 25: theqrl.zond.v1.BlindedBeaconBlockBody.dilithium_to_execution_changes:type_name -> theqrl.zond.v1.SignedDilithiumToExecutionChange
	17, // 26: theqrl.zond.v1.ProposerSlashing.signed_header_1:type_name -> theqrl.zond.v1.SignedBeaconBlockHeader
	17, // 27: theqrl.zond.v1.ProposerSlashing.signed_header_2:type_name -> theqrl.zond.v1.SignedBeaconBlockHeader
	18, // 28: theqrl.zond.v1.AttesterSlashing.attestation_1:type_name -> theqrl.zond.v1.IndexedAttestation
	18, // 29: theqrl.zond.v1.AttesterSlashing.attestation_2:type_name -> theqrl.zond.v1.IndexedAttestation
	20, // 30: theqrl.zond.v1.Deposit.data:type_name -> theqrl.zond.v1.Deposit.Data
	13, // 31: theqrl.zond.v1.SignedVoluntaryExit.message:type_name -> theqrl.zond.v1.VoluntaryExit
	16, // 32: theqrl.zond.v1.SignedBeaconBlockHeader.message:type_name -> theqrl.zond.v1.BeaconBlockHeader
	25, // 33: theqrl.zond.v1.IndexedAttestation.data:type_name -> theqrl.zond.v1.AttestationData
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_proto_zond_v1_beacon_block_proto_init() }
func file_proto_zond_v1_beacon_block_proto_init() {
	if File_proto_zond_v1_beacon_block_proto != nil {
		return
	}
	file_proto_zond_v1_attestation_proto_init()
	file_proto_zond_v1_withdrawals_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_zond_v1_beacon_block_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlindedBeaconBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconBlockContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedBeaconBlockContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlindedBeaconBlockContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedBlindedBeaconBlockContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedBeaconBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedBlindedBeaconBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconBlockBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlindedBeaconBlockBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposerSlashing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttesterSlashing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deposit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoluntaryExit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedVoluntaryExit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Zond1Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconBlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedBeaconBlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexedAttestation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncAggregate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_zond_v1_beacon_block_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deposit_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_zond_v1_beacon_block_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*BeaconBlockContainer_CapellaBlock)(nil),
	}
	file_proto_zond_v1_beacon_block_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*SignedBeaconBlockContainer_CapellaBlock)(nil),
	}
	file_proto_zond_v1_beacon_block_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*BlindedBeaconBlockContainer_CapellaBlock)(nil),
	}
	file_proto_zond_v1_beacon_block_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*SignedBlindedBeaconBlockContainer_CapellaBlock)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_zond_v1_beacon_block_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_zond_v1_beacon_block_proto_goTypes,
		DependencyIndexes: file_proto_zond_v1_beacon_block_proto_depIdxs,
		MessageInfos:      file_proto_zond_v1_beacon_block_proto_msgTypes,
	}.Build()
	File_proto_zond_v1_beacon_block_proto = out.File
	file_proto_zond_v1_beacon_block_proto_rawDesc = nil
	file_proto_zond_v1_beacon_block_proto_goTypes = nil
	file_proto_zond_v1_beacon_block_proto_depIdxs = nil
}
